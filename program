#!/bin/bash

controlDir=$1 # Контролируемая директория
backup="/home/user/lab6/backup" # Директория резервных копий
controlSum="/home/user/lab6/ControlSum" # Контрольные суммы
eventlog="/home/user/lab6/eventlog" # Файл-журнал регистрации событий 

# Если существует директория резервных копий, удаляем её
if [ -d "$backup" ]; then
    rm -r "$backup"
fi
# Создаем директорию для хранения резервных копий
mkdir -p "$backup"

# Копируем содержимое контролируемой директории в директорию резервных копий
cp "$controlDir"/* "$backup"

# Если существует файл с контрольными суммами, удаляем его
if [ -e "$controlSum" ]; then
    rm "$controlSum"
fi
# Создаем новый файл для хранения контрольных сумм
touch "$controlSum"

# Для каждого файла в директории резервных копий считаем контрольную сумму и записываем в файл
for f in "$backup"/*; do
    sha512sum "$f" >> "$controlSum"
done

# Если существует файл-журнал регистрации событий, удаляем его
if [ -e "$eventlog" ]; then
    rm "$eventlog"
fi
# Создаем новый файл-журнал регистрации событий
touch "$eventlog"

# Функция для проверки целостности файла по его контрольной сумме и восстановления файла из резервной копии в случае, 
# если контрольные суммы не совпадают.
checkSum() {
    filename=$1
    # Если файла нет в директории резервных копий, завершаем функцию
    if [[ ! -f "${backup}/${filename}" ]]
    then
        return 0
    fi

    expected=$(sha256sum "${backup}/${filename}" | awk '{print $1}') 
    actual=$(sha256sum "${controlDir}/${filename}" | awk '{print $1}')
    # awk '{print $1}' - извлечение первого поля из вывода команды

    # Если хэш-суммы не совпадают 
    if [ ${actual} != ${expected} ]
    then
        # Восстановливаем файл из резервной копии
        cp -f "${backup}/${filename}" "${controlDir}/${filename}"

        # Сохраняем лог в файле-журнале регистрации событий 
        logstr="$(date '+%Y-%m-%d %H:%M:%S'): [${controlDir}/${filename}]"
        logstr2=" was changed (checksum didn't match), has been recovered from [${backup}/${filename}]"
        echo "${logstr}${logstr2}" >> "$eventlog"
    fi
}

# Для каждого файла в указанной директории $controlDir вызываем функцию checkSum()
checkSumForEachFile() {
    for item in "${controlDir}"/*; do
        # Если ${item}, является существующим и обычным файлом (не каталогом или символической ссылкой)
        if [[ -f "${item}" ]]
        then
            filename=$(basename "${item}")
            checkSum "${filename}"
        fi
    done
}

# Вызов checkSumForEachFile каждые 5 секунд
while :; do
    checkSumForEachFile
    sleep 5
done
